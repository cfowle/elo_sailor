scoreDiff = result$scoreDiff[[1]]
##Run Elo update function
win = result$win[[1]]
updatedScores = elo.calc(win, scoreA, scoreB, k = k)
##Update ratings
updatedRatings = existingRatings
updatedRatings[competitorA] = updateCompetitorScore(existingRatings[competitorA],
updatedScores[1, 1],
regatta,
result$raceID[[1]])
updatedRatings[competitorB] = updateCompetitorScore(existingRatings[competitorB],
updatedScores[1, 2],
regatta,
result$raceID[[1]])
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
View(exisitingRatings)
View(exisitingRatings)
exisitingRatings
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
View(exisitingRatings)
exisitingRatings
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
##Update ratings
updatedRatings = existingRatings
updateCompetitorScore(existingRatings[competitorA],
updatedScores[1, 1],
regatta,
result$raceID[[1]])
updateRatings(existingRatings[competitorA],
updatedScores[1, 1],
regatta,
result$raceID[[1]])
updateRatings(existingRatings[competitorB],
updatedScores[1, 2],
regatta,
result$raceID[[1]])
updatedRatings[competitorB]
updatedRatings[competitorA] = updateRatings(existingRatings[competitorA],
updatedScores[1, 1],
regatta,
result$raceID[[1]])
updatedRatings[competitorB] = updateRatings(existingRatings[competitorB],
updatedScores[1, 2],
regatta,
result$raceID[[1]])
updatedRatings[competitorA] = updateRatings(existingRatings[competitorA],
updatedScores[1, 1],
regatta,
result$raceID[[1]])
updatedRatings[competitorA] = NULL
updatedRatings[competitorA] = updateRatings(existingRatings[competitorA],
updatedScores[1, 1],
regatta,
result$raceID[[1]])
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefinePairwiseComparisonFunction.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefinePairwiseComparisonFunction.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
updatedRatings[competitorA] = updateRatings(existingRatings[competitorA],
updatedScores[1, 1],
regatta,
result$raceID[[1]])
updatedRatings[competitorA] = updateRatings(existingRatings[competitorA],
updatedScores[1, 1],
regatta,
result$raceID[[1]])
updatedRatings[[competitorA]] = updateRatings(existingRatings[competitorA],
updatedScores[1, 1],
regatta,
result$raceID[[1]])
View(updatedRatings)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
updatedRatings = processResult(updatedRatings, result, regatta)
View(updatedRatings)
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
updatedScores = elo.calc(win, scoreA, scoreB, k = k)
##Update ratings
updatedRatings = existingRatings
existingRatings[competitorA]
updatedRatings[[competitorA]] = updateRatings(existingRatings[competitorA],
updatedScores[1, 1],
regatta,
result$raceID[[1]])
updatedRatings[[competitorB]] = updateRatings(existingRatings[competitorB],
updatedScores[1, 2],
regatta,
result$raceID[[1]])
updatedScores = elo.calc(win, scoreA, scoreB, k = k)
updatedScores = elo.calc(win, scoreA, scoreB, k = k)
result
elo.calc(win, scoreA, scoreB, k = k)
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
updatedRatings = processResult(updatedRatings, result, regatta)
eloOutput = elo.calc(win, ratingA, ratingB, k = k)
##Update ratings
updatedRatings = existingRatings
updatedRatings[[competitorA]] = updateRatings(existingRatings[competitorA],
eloOuput[1, 1],
regatta,
result$raceID[[1]])
updatedRatings[[competitorA]] = updateRatings(existingRatings[competitorA],
eloOutput[1, 1],
regatta,
result$raceID[[1]])
updatedRatings[[competitorB]] = updateRatings(existingRatings[competitorB],
eloOutput[1, 2],
regatta,
result$raceID[[1]])
View(updatedRatings)
updatedRatings[competitorB] = updateRatings(existingRatings[competitorB],
eloOutput[1, 2],
regatta,
result$raceID[[1]])
updateRatings(existingRatings[competitorB],
eloOutput[1, 2],
regatta,
result$raceID[[1]])
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineCompetitorFunctions.R', echo=TRUE)
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
eloOutput = elo.calc(win, ratingA, ratingB, k = k)
competitor$ratings = rbind(c(regatta$day, regatta$id, regatta$name, raceID, newRating),
competitor$ratings)
competitor
competitor$currentrating <- newRating
competitor$currentRating <- newRating
newRow = data.frame(regatta$day, regatta$id, regatta$name, raceID, newRating)
names(newRow) = c("day", "id", "name", "raceID", "rating")
newCompetitor = new(Competitor,
id = competitor$id,
name = competitor$name,
currentRating = newRating,
ratings = rbind(competitor$ratings, newRow))
newCompetitor = new("Competitor",
id = competitor$id,
name = competitor$name,
currentRating = newRating,
ratings = rbind(competitor$ratings, newRow))
competitor$ratings
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineCompetitorFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
rbind(competitor$ratings, newRow)
newCompetitor = new("Competitor",
id = competitor$id,
name = competitor$name,
currentRating = newRating,
ratings = rbind(competitor$ratings, newRow))
competitor$id
competitor
competitor$name
View(competitor)
competitor[[1]]$id
competitor[[1]]$name,
competitor[[1]]$name
rbind(competitor[[1]]$ratings, newRow)
newCompetitor = new("Competitor",
id = competitor[[1]]$id,
name = competitor[[1]]$name,
currentRating = newRating,
ratings = rbind(competitor[[1]]$ratings, newRow))
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineCompetitorFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
eloOutput = elo.calc(win, ratingA, ratingB, k = k)
##Update ratings
updatedRatings = existingRatings
updatedRatings[[competitorA]] = updateRatings(existingRatings[competitorA],
eloOutput[1, 1],
regatta,
result$raceID[[1]])
updatedRatings[[competitorB]] = updateRatings(existingRatings[competitorB],
eloOutput[1, 2],
regatta,
result$raceID[[1]])
View(updatedRatings)
updatedRatings[[competitorB]]
updatedRatings[[competitorB]] = updateRatings(existingRatings[competitorB],
eloOutput[1, 2],
regatta,
result$raceID[[1]])
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/_Master.R', echo=TRUE)
View(exisitingRatings)
View(exisitingRatings)
View(exisitingRatings)
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/_Master.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
updateRatings(existingRatings[competitorA],
eloOutput[1, 1],
regatta,
result$raceID[[1]])
updateRatings(existingRatings[competitorB],
eloOutput[1, 2],
regatta,
result$raceID[[1]])
updatedRatings[[competitorA]] = updateRatings(existingRatings[competitorA],
eloOutput[1, 1],
regatta,
result$raceID[[1]])
##Update ratings
updatedRatings = existingRatings
updatedRatings[[competitorA]] = updateRatings(existingRatings[competitorA],
eloOutput[1, 1],
regatta,
result$raceID[[1]])
updatedRatings[[competitorB]] = updateRatings(existingRatings[competitorB],
eloOutput[1, 2],
regatta,
result$raceID[[1]])
View(updatedRatings)
updatedRatings[[competitorB]] <- updateRatings(existingRatings[competitorB],
eloOutput[1, 2],
regatta,
result$raceID[[1]])
View(updatedRatings)
updateRatings(existingRatings[competitorA],
eloOutput[1, 1],
regatta,
result$raceID[[1]])
updateRatings(existingRatings[competitorB],
eloOutput[1, 2],
regatta,
result$raceID[[1]])
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
View(existingRatings)
View(existingRatings)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
View(exisitingRatings)
exisitingRatings
View(results)
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
competitorA
competitorB
competitorA
ceID[[1]])
updatedRatings[[competitorB]] = updateRatings(existingRatings[competitorB
competitorB
competitorB
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
id = 1
regattaResults = results %>%
filter(regatta_id == id)
exisitingRatings = updateExistingRatings(exisitingRatings, regatta, regattaResults)
View(results)
View(matchups)
View(results)
?elo.calc
competitorA = "Fiber One"
competitorB = "Froot Loops"
ratingA = c(existingRatings[[competitorA]]$currentRating)
View(exisitingRatings)
existingRatings = exisitingRatings
ratingA = c(existingRatings[[competitorA]]$currentRating)
ratingA = c(existingRatings[[competitorA]]$currentRating)
ratingB = c(existingRatings[[competitorB]]$currentRating)
ratingA = 200
ratingB = 200
scoreDiff = 0
k = log(scoreDiff)
win = 0.5
eloOutput = elo.calc(win, ratingA, ratingB, k = k)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
id = 1
regattaResults = results %>%
filter(regatta_id == id)
exisitingRatings = updateExistingRatings(exisitingRatings, regatta, regattaResults)
exisitingRatings = list()
exisitingRatings = updateExistingRatings(exisitingRatings, regatta, regattaResults)
win = 0.5
ratingA = 200
ratingB = 200
k = 0.5
eloOutput = elo.calc(win, ratingA, ratingB, k = k)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
exisitingRatings = list()
id =1
regattaResults = results %>%
filter(regatta_id == id)
exisitingRatings = updateExistingRatings(exisitingRatings, regatta, regattaResults)
regattaResults %<>% filter(competitorID %in% c("Fiber One", "Froot Loops"))
exisitingRatings = updateExistingRatings(exisitingRatings, regatta, regattaResults)
exisitingRatings = list()
exisitingRatings = updateExistingRatings(exisitingRatings, regatta, regattaResults)
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
exisitingRatings = updateExistingRatings(exisitingRatings, regatta, regattaResults)
eloOutput = elo.calc(win, ratingA, ratingB, k = k)
win
ratingA
ratingB
existingRatings = list()
existingRatings = updateExistingRatings(existingRatings, regatta, regattaResults)
eloOutput = elo.calc(win, ratingA, ratingB, k = k)
ratingA
ratingB
existingRatings = list()
existingRatings = updateExistingRatings(existingRatings, regatta, regattaResults)
View(existingRatings)
existingRatings
ratingB
ratingB = c(existingRatings[[competitorB]]$currentRating)
existingRatings[[competitorB]]$currentRating)
result$competitorB[[1]]
result$competitorA[[1]]
existingRatings[[competitorA]]
existingRatings[[competitorB]]
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
existingRatings = list()
existingRatings = updateExistingRatings(existingRatings, regatta, regattaResults)
eloOutput = elo.calc(win, ratingA, ratingB, k = k)
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
existingRatings = list()
existingRatings = updateExistingRatings(existingRatings, regatta, regattaResults)
View(updatedRatings)
updateRatings
updatedRatings
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
existingRatings = list()
existingRatings = updateExistingRatings(existingRatings, regatta, regattaResults)
competitor = newCompetitors[i, ]
competitor = newCompetitors[i, ]
existingRatings = list()
existingRatings = updateExistingRatings(existingRatings, regatta, regattaResults)
newCompetitors
View(newCompetitors)
existingRatings = updateExistingRatings(existingRatings, regatta, regattaResults)
names(exisitingRatings)
unique(results$competitorID)
existingRatings = list()
existingRatings = updateExistingRatings(existingRatings, regatta, regattaResults)
##get list of competitors in each input
ratingsCompetitors = names(exisitingRatings)
resultsCompetitors  = unique(results$competitorID)
View(exisitingRatings)
existingRatings = list()
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
existingRatings = updateExistingRatings(existingRatings, regatta, regattaResults)
resultsCompetitors  = unique(results$competitorID)
competitor = newCompetitors[i, ]
name = competitor$competitorName
id = competitor$competitorID
##TODO: Think about whether or not this is the start condition we want
rating = START_RATING
initialRow = data.frame(0, -1, "Initial Value", 0, rating)
names(initialRow) = c("day", "id", "name", "raceID", "newRating")
updatedRatings[id] = Competitor(id = id,
name = name,
currentRating = rating,
ratings = initialRow)
existingRatings = list()
existingRatings = updateExistingRatings(existingRatings, regatta, regattaResults)
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
existingRatings = list()
existingRatings = updateExistingRatings(existingRatings, regatta, regattaResults)
eloOutput = elo.calc(win, ratingA, ratingB, k = k)
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
existingRatings = list()
existingRatings = updateExistingRatings(existingRatings, regatta, regattaResults)
eloOutput = elo.calc(win, ratingA, ratingB, k = k)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
regattaResults = results %>%
filter(regatta_id == id)
existingRatings = updateExistingRatings(existingRatings, regatta, regattaResults)
existingRatings = list()
regattaResults = results %>%
filter(regatta_id == id)
existingRatings = updateExistingRatings(existingRatings, regatta, regattaResults)
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
existingRatings = list()
regattaResults = results %>%
filter(regatta_id == id)
existingRatings = updateExistingRatings(existingRatings, regatta, regattaResults)
updatedRatings[[competitorA]] = updateRatings(existingRatings[competitorA],
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/_Master.R', echo=TRUE)
View(existingRatings)
print(existingRatings)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/_Master.R', echo=TRUE)
View(regattaTable)
View(regattaResults)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/_Master.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/_Master.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/_Master.R', echo=TRUE)
View(results)
View(existingRatings)
View(existingRatings)
View(existingRatings)
View(existingRatings)
View(existingRatings)
warnings()
existingRatings[["Apple Jacks"]]
exisitingRankings
existingRatings
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/_Master.R', echo=TRUE)
View(existingRatings)
!is.na(id)
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/_Master.R', echo=TRUE)
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
c
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
length(id) > 1
nchar(id) > 1
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
nchar(name)
is.na(name)
!is.na(name) | nchar(id) > 1
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
!is.na(name) | nchar(id) > 1
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
newCompetitors %<>% filter(!is.na(competitorID))
competitor = newCompetitors[i, ]
name = competitor$competitorName
nrow(newCompetitors)
1:nrow(newCompetitors)
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
competitor
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
View(existingRatings)
ratings = data.frame()
for(competitor in existingRatings) {
ratings %<>% rbind(data.frame(competitor$id, competitor$currentRating))
}
View(ratings)
competitor$id
competitor$currentRating)
competitor$currentRating
data.frame(competitor$id, competitor$currentRating)
ratings = data.frame()
for(competitor in existingRatings) {
print(competitor)
ratings %<>% rbind(data.frame(competitor$id, competitor$currentRating))
}
existingRankings
existingRatings
View(results)
View(ratings)
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
exisitingRatings
existingRatings
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
updatedRatings
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
name = competitor
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
id = competitor$competitorID
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
View(ratings)
View(results)
View(existingRatings)
View(ratings)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/_Master.R', echo=TRUE)
View(ratings)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/_Master.R', echo=TRUE)
View(scaledratings)
View(ratings)
ratings %<>% filter(competitor.currentRating != 1500)
scaledratings %<>% filter(competitor.currentRating != 1500)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/_Master.R', echo=TRUE)
View(scaledratings)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/_Master.R', echo=TRUE)
View(scaledratings)
