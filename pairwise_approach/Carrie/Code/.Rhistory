ACTUAL_WEIGHT = 0.5
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
ACTUAL_WEIGHT = 0.75
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
View(results)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
View(scoreHistory)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
DELTA_T = .5
ACTUAL_WEIGHT = 0.5
N_INIT = 0.5
source("./RunResults.R")
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source("./RunResults.R")
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/DefineCompetitorFunctions.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source("./RunResults.R")
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/DefineCompetitorFunctions.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/DefineCompetitorFunctions.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source("./RunResults.R")
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/DefineCompetitorFunctions.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
ACTUAL_WEIGHT = 1.5
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
ACTUAL_WEIGHT = .75
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
ACTUAL_WEIGHT = 2
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
ACTUAL_WEIGHT = .5
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
View(means)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
ACTUAL_WEIGHT = -1.5
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/DefineCompetitorFunctions.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/DefineCompetitorFunctions.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
View(results)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
DELTA_T = .15
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
DELTA_T = .3
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
DELTA_T = .35
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
ACTUAL_WEIGHT = -2
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/DefineCompetitorFunctions.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
ACTUAL_WEIGHT = 2
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
ACTUAL_WEIGHT = -2
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
results = read_csv("../input/neisa_only.csv")
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/_master.R', echo=TRUE)
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
DELTA_T = .15
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
DELTA_T = 1
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
DELTA_T = .8
ACTUAL_WEIGHT = -1.5
N_INIT = 0.5
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
ACTUAL_WEIGHT = -3
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
ACTUAL_WEIGHT = -2.5
source('~/code/elo_sailor/summary_approach/code/RunResults.R', echo=TRUE)
install.packages("Elo")
install.packages("elo")
library(elo)
vignette(ele)
vignette(elo)
?elo
vignette
vignette()
vignette('elo')
source('~/code/telltales/dashboard/scripts/define_cleaning_functions.R', echo=TRUE)
source('~/code/telltales/dashboard/scripts/define_clean_yc_helper_functions.R', echo=TRUE)
source('~/code/telltales/dashboard/scripts/clean_data.R', echo=TRUE)
setwd("~/code/telltales/dashboard/scripts")
source('~/code/telltales/dashboard/scripts/define_clean_yc_helper_functions.R', echo=TRUE)
source('~/code/telltales/dashboard/scripts/clean_data.R', echo=TRUE)
###############################################################################
##  Project: Regatta Results
##  File Purpose: Master file telltales data sourcing
##  Owner: Carrie Fowle
##  Last Updated: January 17, 2018
###############################################################################
library(dplyr)
library(ggplot2)
library(magrittr)
library(readr)
library(stringdist)
library(stringr)
library(tidyr)
library(rvest)
library(feather)
library(lubridate)
setwd("~/code/telltales/scripts")
##GLOBAL VARS
N_REPEAT = 3 ##number of yc grouping cycles
STOP_WORDS = "yacht|club|team|sailing|school|center|yc|ss|sc" ##standard words that frequently appear in YC names
source("define_cleaning_functions.R")
source("clean_data.R")
##clean data
source("define_cleaning_functions.R")
##remove headers that made it into the data
dat = dat_raw %>%
filter(Skipper != "Skipper" & Total != "Total")
dat %<>%
select_if(grepl("^[a-zA-Z]+", names(.)))
colnames(dat) = sapply(colnames(dat), tolower)
colnames(dat) = str_replace(colnames(dat), " ", "_")
##break apart division column
dat %<>%
mutate(division_name = getClass(division),
n_boats = str_extract(division, "(?<=\\()\\d+"),
n_races = str_extract(division, "(?<=- )\\d+")) %>%
mutate(clean_class = cleanClass(division_name))
##get list of uncleaned division
dat %>%
filter(is.na(clean_class)) %>%
select(division_name) %>%
unique %>%
write.csv("../intermediate/uncleaned_classes.csv")
##get skipper/crew
dat %<>%
rename(skipper_raw = skipper) %>%
mutate(skipper = ifelse(str_detect(skipper_raw, "/"), str_extract(skipper_raw, ".+(?=/)"), skipper_raw)) %>%
mutate(crew = ifelse(str_detect(skipper_raw, "/"), str_extract(skipper_raw, "(?<=/).+"), NA))
##clean header
dat %<>%
mutate(regatta = str_extract(header, ".*(?=\r)"),
host = str_extract(header, "(?<=\n).*(?=\\|)"),
date = str_extract(header, "(?<=\\|).*(?=\r)"))
##clean date
dat %<>%
mutate(start_year  = str_extract(date, "\\d{4}"),
start_month = str_extract(date, "[a-zA-Z]+"),
end_month   = str_extract(date, "(?<=\\-)[a-zA-Z]+"),
start_day   = str_extract(date, "\\d{1,2}"),
end_chunk   = str_extract(date, "(?<=\\-).*")) %>%
mutate(end_year    = str_extract(end_chunk, "\\d{4}"),
end_day     = str_extract(end_chunk, "\\d{1,2}")) %>%
mutate(end_year  = ifelse(is.na(end_year), start_year, end_year),
end_month = ifelse(is.na(end_month), start_month, end_month),
end_day   = ifelse(is.na(end_day), start_day, end_day)) %>%
mutate(start_date = mdy(paste0(start_month, " ", start_day, ", ", start_year)),
end_date   = mdy(paste0(end_month, " ", end_day, ", ", end_year))) %>%
mutate(start_year = NULL,
start_month= NULL,
start_day  = NULL,
end_month  = NULL,
end_day    = NULL,
end_year   = NULL,
end_chunk  = NULL) %>%
rename(date_raw = date)
setwd("~/code/elo_sailor/pairwise_approach/Carrie/Code")
library(assertthat)
?assert_that
##loop through results to create pairwise comparison
matchups = data.frame(raceID = numeric,
competitorA = character,
competitorB = character,
win = numeric,
scoreDiff = numeric)
source('~/code/elo_sailor/pairwise_approach/scrape_etchells/code/id_skippers.R', echo=TRUE)
###############################################################################
### MASTER FILE FOR SCRAPING ETCHELLS FLEET 20 SCORES
###############################################################################
library(dplyr)
library(magrittr)
library(readr)
library(rvest)
library(stringr)
library(tidyr)
setwd("~/code/elo_sailor/pairwise_approach/scrape_etchells/code")
source('~/code/elo_sailor/pairwise_approach/scrape_etchells/code/id_skippers.R', echo=TRUE)
scores_grouped = scores %>% group_by(url, id) %>% summarize(count = n()) %>% filter (count > 1) %>% filter(!is.na(id))
source("clean_scores.R")
source("id_skippers.R")
source("scores_by_race.R")
source("define_pairwise_comparison.R")
races = read_csv("../output/etchells_races.csv")
races = read_csv("../output/etchells_races.csv")
pairwise_races = createPairwiseComparisons(races)
###############################################################################
### MASTER FILE FOR SCRAPING ETCHELLS FLEET 20 SCORES
###############################################################################
library(assertthat)
source("define_pairwise_comparison.R")
pairwise_races = createPairwiseComparisons(races)
debugSource('~/code/elo_sailor/pairwise_approach/scrape_etchells/code/define_pairwise_comparison.R', echo=TRUE)
pairwise_races = createPairwiseComparisons(races)
View(races)
for(regatta in unique(races$regatta_id)) {
regatta_pairwise = races %>%
filter(regatta_id = regatta) %>%
createPairwiseComparisons()
}
for(regatta in unique(races$regatta_id)) {
regatta_pairwise = races %>%
filter(regatta_id == regatta) %>%
createPairwiseComparisons()
}
##create output data.frame
matchups = data.frame(raceID = numeric,
competitorA = character,
competitorB = character,
win = numeric,
scoreDiff = numeric)
data.frame(raceID = numeric,
competitorA = character,
competitorB = character,
win = numeric,
scoreDiff = numeric)
data.frame()
data.frame(raceID = numeric
)
data.frame(compt = numeric())
##create output data.frame
matchups = data.frame(raceID = numeric(),
competitorA = character(),
competitorB = character(),
win = numeric(),
scoreDiff = numeric())
debugSource('~/code/elo_sailor/pairwise_approach/scrape_etchells/code/define_pairwise_comparison.R', echo=TRUE)
for(regatta in unique(races$regatta_id)) {
regatta_pairwise = races %>%
filter(regatta_id == regatta) %>%
createPairwiseComparisons()
}
source('~/code/elo_sailor/pairwise_approach/scrape_etchells/code/define_pairwise_comparison.R', echo=TRUE)
pairwise_races = data.frame()
for(regatta in unique(races$regatta_id)) {
regatta_pairwise = races %>%
filter(regatta_id == regatta) %>%
createPairwiseComparisons()
pairwise_races %<>% rbind(regatta_pairwise)
}
races = read_csv("../output/etchells_races.csv")
source('~/code/elo_sailor/pairwise_approach/scrape_etchells/code/scores_by_race.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/scrape_etchells/code/id_skippers.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/scrape_etchells/code/scores_by_race.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/scrape_etchells/code/get_pairwise_comparisons.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/scrape_etchells/code/define_pairwise_comparison.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/scrape_etchells/code/get_pairwise_comparisons.R', echo=TRUE)
View(scores)
races = read_csv("../output/etchells_races.csv") %>%
filter(!is.na(competitorID))
pairwise_races = data.frame()
for(regatta in unique(races$regatta_id)) {
regatta_pairwise = races %>%
filter(regatta_id == regatta) %>%
createPairwiseComparisons()
pairwise_races %<>% rbind(regatta_pairwise)
}
source('~/code/elo_sailor/pairwise_approach/scrape_etchells/code/get_pairwise_comparisons.R', echo=TRUE)
View(pairwise_races)
write.csv(pairwise_races, "../output/etchells_races_pairwise.csv")
IS_PAIRWISE = TRUE
source('~/code/elo_sailor/pairwise_approach/scrape_etchells/code/_master.R', echo=TRUE)
View(pairwise_races)
#############################################################################
### PROJECT:  ELO SAILOR
### CREATED:  2019-06-24
### MODIFIED: 2019-06-24
### REVIEWED: NO
### SUMMARY:  MASTER FILE FOR PAIRWISE COMPARISON
###############################################################################
library(assertthat)
library(dplyr)
library(elo)
library(ggplot2)
library(magrittr)
library(plotly)
library(readr)
setwd("~/code/elo_sailor/pairwise_approach/Carrie/Code")
USE_EXISTING_RATINGS = FALSE
EXISTING_RATINGS_FILE = ""
RACE_LEVEL = TRUE
SCALE_K = FALSE
K = 42
START_RATING = 1000
IS_PAIRWISE = TRUE
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
output = updateExistingRatings(existingRatings,
competitors,
pastRatings,
regatta,
regattaResults,
regattaResultsPairwise)
##check that inputs meet spec
checkInputColumns(existingRatings, "updateExisitingRatings", c("competitorID", "regattaID", "day", "rating"))
checkInputColumns(competitors, "updateExisitingRatings", c("competitorID", "name"))
checkInputColumns(pastRatings, "updateExisitingRatings", c("competitorID", "regattaID", "day", "rating"))
checkInputColumns(regatta, "updateExisitingRatings", c("regattaID", "name", "day"))
assert_that(nrow(regatta) == 1, msg ="Error in updateExistingRatings: df regatta should only contain one row.")
##check for competitors not in existing ratings & update accordingly
missingCompetitors = checkForMissingCompetitors(existingRatings, results)
output = addCompetitors(competitors, existingRatings, missingCompetitors)
updatedRatings = output[["ratings"]]
competitors = output[["competitors"]]
updatedRatings %<>% mutate(competitorID = as.character(competitorID),
regattaID = as.character(regattaID))
##rewrite results pairwise
if(is.null(pairwiseResults)) {
pairwiseResults = createPairwiseComparisons(results)
}
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
races = pairwiseResults %>%
select(raceID) %>%
distinct()
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
View(pairwiseResults)
regattaResultsPairwise = ifelse(is.null(pairwiseResults),
NULL,
filter(pairwiseResults, regatta_id == id))
regattaResultsPairwise = filter(pairwiseResults, regatta_id == id))
regattaResultsPairwise = filter(pairwiseResults, regatta_id == id)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
races = pairwiseResults %>%
select(raceID) %>%
distinct()
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
regattaResults = results %>%
filter(regattaID == id)
regattaResultsPairwise = filter(pairwiseResults, regattaID == id)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
##check that inputs meet spec
checkInputColumns(existingRatings, "updateExisitingRatings", c("competitorID", "regattaID", "day", "rating"))
checkInputColumns(competitors, "updateExisitingRatings", c("competitorID", "name"))
checkInputColumns(pastRatings, "updateExisitingRatings", c("competitorID", "regattaID", "day", "rating"))
checkInputColumns(regatta, "updateExisitingRatings", c("regattaID", "name", "day"))
assert_that(nrow(regatta) == 1, msg ="Error in updateExistingRatings: df regatta should only contain one row.")
##check for competitors not in existing ratings & update accordingly
missingCompetitors = checkForMissingCompetitors(existingRatings, results)
output = addCompetitors(competitors, existingRatings, missingCompetitors)
updatedRatings = output[["ratings"]]
competitors = output[["competitors"]]
updatedRatings %<>% mutate(competitorID = as.character(competitorID),
regattaID = as.character(regattaID))
races = pairwiseResults %>%
select(raceID) %>%
distinct()
i = "r1"
print(i)
raceID = races[i, "raceID"]
regattaID = races[i, "regattaID"]
regattaID = races[i, "regattaID"]
races
raceID = i
regattaID = pairwiseResults[1, "regattaID"]
regattaID = pairwiseResults$regattaID[[1]]
selectedResults = pairwiseResults %>%
filter(raceID == raceID)
output = processRace(updatedRatings, pastRatings, selectedResults, regatta)
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
ratingB = c(filter(existingRatings, competitorID == competitorB)$rating[[1]])
##Get K
if(SCALE_K) {
scoreDiff = result$scoreDiff[[1]]
k = ifelse(scoreDiff == 0, 0, log(scoreDiff)*5)
} else {
k = K
}
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
ratingA = c(filter(existingRatings, competitorID == competitorA)$rating[[1]])
ratingB = c(filter(existingRatings, competitorID == competitorB)$rating[[1]])
View(existingRatings)
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
output = addCompetitors(competitors, existingRatings, missingCompetitors)
View(missingCompetitors)
View(results)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
View(result)
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
View(pairwiseResults)
View(results)
regattaResults = results %>%
filter(regatta_id == id)
View(regattaResults)
View(etchells)
View(pairwiseResults)
View(etchells)
regatta = 74
setwd("~/code/elo_sailor/pairwise_approach/scrape_etchells/code")
races = read_csv("../output/etchells_races.csv") %>%
filter(!is.na(competitorID))
pairwise_races = data.frame()
regatta_pairwise = races %>%
filter(regatta_id == regatta)
View(regatta_pairwise)
View(etchells)
setwd("~/code/elo_sailor/pairwise_approach/Carrie/Code")
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
View(existingRatings)
View(existingRatings)
View(etchells)
