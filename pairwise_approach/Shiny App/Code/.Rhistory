}
for(i in 1:nrow(newCompetitors)){
competitorID = newCompetitors[i,1][[1]]
regattaID = "Initial Value"
day = 0
rating = START_RATING
initialRow = data.frame(competitorID, regattaID, day, rating)
updatedRatings = updatedRatings %>%
rbind(initialRow)
}
competitorID = newCompetitors[i,1][[1]]
regattaID = "Initial Value"
day = 0
rating = START_RATING
initialRow = data.frame(competitorID, regattaID, day, rating)
updatedRatings = updatedRatings %>%
rbind(initialRow)
i =2
competitorID = newCompetitors[i,1][[1]]
regattaID = "Initial Value"
day = 0
rating = START_RATING
initialRow = data.frame(competitorID, regattaID, day, rating)
updatedRatings = updatedRatings %>%
rbind(initialRow)
output = list("competitors" = updatedCompetitors, "ratings" = updatedRatings)
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
competitors = output[["competitors"]]
updatedRatings %>% mutate(competitorID = as.character(competitorID),
regattaID = as.character(regattaID))
updatedRatings %<>% mutate(competitorID = as.character(competitorID),
regattaID = as.character(regattaID))
competitors = output[["competitors"]]
updatedRatings %<>% mutate(competitorID = as.character(competitorID),
regattaID = as.character(regattaID))
competitors = output[["competitors"]]
updatedRatings %<>% mutate(competitorID = as.character(competitorID),
regattaID = as.character(regattaID))
competitors = output[["competitors"]]
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
competitors = output[["competitors"]]
##check for competitors not in existing ratings & update accordingly
missingCompetitors = checkForMissingCompetitors(existingRatings, results)
debugSource('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
##check that newCompetitors object is as expected
columnNames = c("name", "competitorID")
checkInputColumns(newCompetitors, "addCompetitors", columnNames)
##create new competitor objects and add them to the ratings
updatedCompetitors = competitors
newCompetitors %<>% filter(!is.na(competitorID))
if(nrow(newCompetitors) == 0){
return(existingRatings)
}
updatedCompetitors %<>% rbind(newCompetitors)
updatedRatings = existingRatings
i
competitorID = newCompetitors[i,1][[1]]
regattaID = "Initial Value"
day = 0
rating = START_RATING
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/DefineRatingFunctions.R', echo=TRUE)
source('~/code/elo_sailor/pairwise_approach/Carrie/Code/RunRatings.R', echo=TRUE)
View(existingRatings)
source('~/code/elo_sailor/pairwise_approach/Shiny App/Code/businessCode.R', echo=TRUE)
ggplot(data = ratings) +
geom_histogram()
ggplot(data = ratings) +
geom_histogram( bins =10)
ggplot(data = ratings, aes(x=rating)) +
geom_histogram( bins =10)
}
ggplot(data = ratings, aes(x=rating)) +
geom_histogram( bins = 30)
ggplot(data = ratings, aes(x=rating)) +
geom_histogram( bins = 20)
N_BINS = 15
ggplot(data = ratings, aes(x=rating)) +
geom_histogram( bins = N_BINS)
range = max(ratings$rating) - min(ratings$rating)
scale = min(ratings$ratings)
scale = min(ratings$rating)
ratings %<>%
mutate(rating = rating - scale) %>%
mutate(percentile = rating/range*100)
ggplot(data = ratings, aes(x=percentile)) +
geom_histogram( bins = N_BINS)
N_BINS = 10
ggplot(data = ratings, aes(x=percentile)) +
geom_histogram( bins = N_BINS)
competitorScore = filter(ratins, competitorID == competitorID)$percentile[[1]]
upperBound = 10^ceiling(log10(compeitorScore))
lowerBound = upperBound - 10
ratings_bins = ratings %>%
mutate(bin = ifelse(percentile < lowerBound , 0,
ifelse(percentile > upperBound, 1, 2)))
histogram = ggplot(data = ratings, aes(x=percentile, color = bin)) +
geom_histogram( bins = N_BINS)
histogram
ggplot(data = ratings_bins, aes(x=percentile, color = bin)) +
geom_histogram( bins = N_BINS)
ratings_bins = ratings %>%
mutate(bin = ifelse(percentile < lowerBound , 0,
ifelse(percentile > upperBound, 1, 2)))
lowerBound = upperBound - 10
upperBound = 10^ceiling(log10(compeitorScore))
competitorScore = filter(ratins, competitorID == competitorID)$percentile[[1]]
competitorScore = filter(ratings, competitorID == competitorID)$percentile[[1]]
upperBound = 10^ceiling(log10(compeitorScore))
lowerBound = upperBound - 10
ratings_bins = ratings %>%
mutate(bin = ifelse(percentile < lowerBound , 0,
ifelse(percentile > upperBound, 1, 2)))
histogram = ggplot(data = ratings_bins, aes(x=percentile, color = bin)) +
geom_histogram( bins = N_BINS)
upperBound = 10^ceiling(log10(compeitorScore))
upperBound = 10^ceiling(log10(competitorScore))
lowerBound = upperBound - 10
ratings_bins = ratings %>%
mutate(bin = ifelse(percentile < lowerBound , 0,
ifelse(percentile > upperBound, 1, 2)))
histogram = ggplot(data = ratings_bins, aes(x=percentile, color = bin)) +
geom_histogram( bins = N_BINS)
ggplot(data = ratings_bins, aes(x=percentile, color = bin)) +
geom_histogram( bins = N_BINS)
View(ratings_bins)
log10(competitorScore)
ceiling(log10(competitorScore))
round(competitorScore/10)*10
upperBound = ifelse(round(competitorScore/10)*10 >= competitorScore,
round(competitorScore/10)*10,
round(competitorScore/10)*10 + 10)
lowerBound = upperBound - 10
ratings_bins = ratings %>%
mutate(bin = ifelse(percentile < lowerBound , 0,
ifelse(percentile > upperBound, 1, 2)))
ggplot(data = ratings_bins, aes(x=percentile, color = bin)) +
geom_histogram( bins = N_BINS)
ggplot(data = ratings_bins, aes(x=percentile, fill = bin)) +
geom_histogram( bins = N_BINS)
ratings_bins = ratings %>%
mutate(bin = ifelse(percentile < lowerBound , 0,
ifelse(percentile > upperBound, 1, 2))) %>%
mutate(bin = as.facter(bin))
ratings_bins = ratings %>%
mutate(bin = ifelse(percentile < lowerBound , 0,
ifelse(percentile > upperBound, 1, 2))) %>%
mutate(bin = as.factor(bin))
ggplot(data = ratings_bins, aes(x=percentile, fill = bin)) +
geom_histogram( bins = N_BINS)
View(ratings_bins)
N_BINS = 20
ompetitorScore = filter(ratings, competitorID == competitorID)$percentile[[1]]
upperBound = ifelse(round(competitorScore/N_BINS)*N_BINS >= competitorScore,
round(competitorScore/N_BINS)*N_BINS,
round(competitorScore/N_BINS)*N_BINS + N_BINS)
lowerBound = upperBound - N_BINS
ratings_bins = ratings %>%
mutate(bin = ifelse(percentile < lowerBound , 0,
ifelse(percentile > upperBound, 1, 2))) %>%
mutate(bin = as.factor(bin))
histogram = ggplot(data = ratings_bins, aes(x=percentile, fill = bin)) +
geom_histogram( bins = N_BINS)
histogram
divisor = 100/N_BINS
competitorScore = filter(ratings, competitorID == competitorID)$percentile[[1]]
upperBound = ifelse(round(competitorScore/divisor)*divisor >= competitorScore,
round(competitorScore/divisor)*divisor,
round(competitorScore/divisor)*divisor+ divisor)
lowerBound = upperBound - divisor
ratings_bins = ratings %>%
mutate(bin = ifelse(percentile < lowerBound , 0,
ifelse(percentile > upperBound, 1, 2))) %>%
mutate(bin = as.factor(bin))
histogram = ggplot(data = ratings_bins, aes(x=percentile, fill = bin)) +
geom_histogram( bins = N_BINS)
histogram
N_BINS = 12
divisor = 100/N_BINS
competitorScore = filter(ratings, competitorID == competitorID)$percentile[[1]]
upperBound = ifelse(round(competitorScore/divisor)*divisor >= competitorScore,
round(competitorScore/divisor)*divisor,
round(competitorScore/divisor)*divisor+ divisor)
lowerBound = upperBound - divisor
ratings_bins = ratings %>%
mutate(bin = ifelse(percentile < lowerBound , 0,
ifelse(percentile > upperBound, 1, 2))) %>%
mutate(bin = as.factor(bin))
histogram = ggplot(data = ratings_bins, aes(x=percentile, fill = bin)) +
geom_histogram( bins = N_BINS)
histogram
combined = rating %>%
rbind(pastRatings)
timeline = gglot(data = combined, aes(x = day, y = rating, fill = competitorID)) +
geom_line()
ggplot(data = combined, aes(x = day, y = rating, fill = competitorID)) +
geom_line()
combined = rating %>%
rbind(pastRatings)
combined = ratings %>%
rbind(pastRatings)
pastRatings %<>%
mutate(rating = rating - scale) %>%
mutate(percentile = rating/range*100)
combined = pastRatings %>%
rbind(pastRatings)
ggplot(data = combined, aes(x = day, y = percentile, fill = competitorID)) +
geom_line()
ggplot(data = combined, aes(x = day, y = percentile, group = competitorID)) +
geom_line()
range = max(pastRatings$rating) - min(pastRatings$rating)
scale = min(pastRatings$rating)
pastRatings %<>%
mutate(rating = rating - scale) %>%
mutate(percentile = rating/range*100)
combined = pastRatings %>%
rbind(pastRatings)
ggplot(data = combined, aes(x = day, y = percentile, group = competitorID)) +
geom_line()
ggplot(data = combined, aes(x = day,
y = percentile,
group = competitorID,
color = competitorID)) +
geom_line()
id = "Cheerios"
combined = pastRatings %>%
rbind(pastRatings) %>%
mutate(color = ifelse(competitorID == id, 1, 0))
timeline = ggplot(data = combined, aes(x = day,
y = percentile,
group = competitorID,
color = color)) +
geom_line()
timeline
id = "Apple Jacks"
combined = pastRatings %>%
rbind(pastRatings) %>%
mutate(color = ifelse(competitorID == id, 1, 0))
timeline = ggplot(data = combined, aes(x = day,
y = percentile,
group = competitorID,
color = color)) +
geom_line()
timeline
id = "Froot Loops"
combined = pastRatings %>%
rbind(pastRatings) %>%
mutate(color = ifelse(competitorID == id, 1, 0))
ggplot(data = combined, aes(x = day,
y = percentile,
group = competitorID,
color = color)) +
geom_line()
source('~/code/elo_sailor/pairwise_approach/Shiny App/Code/businessCode.R', echo=TRUE)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/code/telltales/dashboard')
runApp()
runApp()
runApp()
runApp()
ggplot(data = combined, aes(x = day,
y = percentile,
group = competitorID,
color = color)) +
geom_line() +
scale_color_limesight() +
theme_limesight()
combined = pastRatings %>%
rbind(pastRatings) %>%
mutate(color = as.factor(ifelse(competitorID == id, 1, 0)))
timeline = ggplot(data = combined, aes(x = day,
y = percentile,
group = competitorID,
color = color)) +
geom_line() +
scale_color_limesight() +
theme_limesight()
combined = pastRatings %>%
rbind(pastRatings) %>%
mutate(color = as.factor(ifelse(competitorID == id, 1, 0)))
combined = pastRatings %>%
rbind(pastRatings) %>%
mutate(color = ifelse(competitorID == id, 1, 0)) %>%
mutate(color = as.factor(color))
id = "Cheerios"
combined = pastRatings %>%
rbind(pastRatings) %>%
mutate(color = ifelse(competitorID == id, 1, 0)) %>%
mutate(color = as.factor(color))
ggplot(data = combined, aes(x = day,
y = percentile,
group = competitorID,
color = color)) +
geom_line() +
scale_color_limesight() +
theme_limesight()
ggplot(data = combined, aes(x = day,
y = percentile,
group = competitorID,
color = color)) +
geom_line() +
scale_color_limesight(palette = "grey") +
theme_limesight()
source('~/code/elo_sailor/pairwise_approach/Shiny App/Code/businessCode.R', echo=TRUE)
combined = pastRatings %>%
rbind(pastRatings) %>%
mutate(color = ifelse(competitorID == id, 1, 0)) %>%
mutate(color = as.factor(color))
timeline = ggplot(data = combined, aes(x = day,
y = percentile,
group = competitorID,
color = color)) +
geom_line() +
scale_color_limesight(palette = "sailing") +
theme_limesight()
source('~/code/elo_sailor/pairwise_approach/Shiny App/Code/businessCode.R', echo=TRUE)
ggplot(data = combined, aes(x = day,
y = percentile,
group = competitorID,
color = color)) +
geom_line() +
scale_color_limesight(palette = "sailing") +
theme_limesight()
source('~/code/elo_sailor/pairwise_approach/Shiny App/Code/theme.R', echo=TRUE)
ggplot(data = combined, aes(x = day,
y = percentile,
group = competitorID,
color = color)) +
geom_line() +
scale_color_limesight(palette = "sailing") +
theme_limesight()
source('~/code/elo_sailor/pairwise_approach/Shiny App/Code/theme.R', echo=TRUE)
ggplot(data = combined, aes(x = day,
y = percentile,
group = competitorID,
color = color)) +
geom_line() +
scale_color_limesight(palette = "sailing") +
theme_limesight()
divisor = 100/N_BINS
competitorScore = filter(ratings, competitorID == competitorID)$percentile[[1]]
upperBound = ifelse(round(competitorScore/divisor)*divisor >= competitorScore,
round(competitorScore/divisor)*divisor,
round(competitorScore/divisor)*divisor+ divisor)
lowerBound = upperBound - divisor
ratings_bins = ratings %>%
mutate(bin = ifelse(percentile < lowerBound , 0,
ifelse(percentile > upperBound, 2, 1))) %>%
mutate(bin = as.factor(bin))
ggplot(data = ratings_bins, aes(x=percentile, fill = bin)) +
geom_histogram( bins = N_BINS) +
scale_fill_limesight(palette = "sailing") +
theme_limesight()
source('~/code/elo_sailor/pairwise_approach/Shiny App/Code/theme.R', echo=TRUE)
ggplot(data = ratings_bins, aes(x=percentile, fill = bin)) +
geom_histogram( bins = N_BINS) +
scale_fill_limesight(palette = "sailing") +
theme_limesight()
N_BINS = 14
divisor = 100/N_BINS
competitorScore = filter(ratings, competitorID == competitorID)$percentile[[1]]
upperBound = ifelse(round(competitorScore/divisor)*divisor >= competitorScore,
round(competitorScore/divisor)*divisor,
round(competitorScore/divisor)*divisor+ divisor)
lowerBound = upperBound - divisor
ratings_bins = ratings %>%
mutate(bin = ifelse(percentile < lowerBound , 0,
ifelse(percentile > upperBound, 2, 1))) %>%
mutate(bin = as.factor(bin))
histogram = ggplot(data = ratings_bins, aes(x=percentile, fill = bin)) +
geom_histogram( bins = N_BINS) +
scale_fill_limesight(palette = "sailing") +
theme_limesight()
histogram
runApp()
combined = pastRatings %>%
rbind(pastRatings) %>%
mutate(color = ifelse(competitorID == id, 1, 0),
size  = ifelse(competitorID == id, 3, 1)) %>%
mutate(color = as.factor(color))
ggplot(data = combined, aes(x = day,
y = percentile,
group = competitorID,
color = color,
size = size)) +
geom_line() +
scale_color_limesight(palette = "sailing") +
theme_limesight()
combined = pastRatings %>%
rbind(pastRatings) %>%
mutate(color = ifelse(competitorID == id, 1, 0),
size  = ifelse(competitorID == id, 1.5, .75)) %>%
mutate(color = as.factor(color))
ggplot(data = combined, aes(x = day,
y = percentile,
group = competitorID,
color = color,
size = size)) +
geom_line() +
scale_color_limesight(palette = "sailing") +
theme_limesight()
combined = pastRatings %>%
rbind(pastRatings) %>%
mutate(color = ifelse(competitorID == id, 1, 0),
size  = ifelse(competitorID == id, 1, .75)) %>%
mutate(color = as.factor(color))
ggplot(data = combined, aes(x = day,
y = percentile,
group = competitorID,
color = color,
size = size)) +
geom_line() +
scale_color_limesight(palette = "sailing") +
theme_limesight()
ggplot(data = combined, aes(x = day,
y = percentile,
group = competitorID,
color = color,
size = size)) +
geom_line() +
scale_size(range = c(2, 4), guide="none")
scale_color_limesight(palette = "sailing") +
theme_limesight()
combined = pastRatings %>%
rbind(pastRatings) %>%
mutate(color = ifelse(competitorID == id, 1, 0),
size  = ifelse(competitorID == id, 2, 1)) %>%
mutate(color = as.factor(color))
ggplot(data = combined, aes(x = day,
y = percentile,
group = competitorID,
color = color,
size = size)) +
geom_line() +
scale_size(range = c(1, 2), guide="none")
scale_color_limesight(palette = "sailing") +
theme_limesight()
ggplot(data = combined, aes(x = day,
y = percentile,
group = competitorID,
color = color,
size = size)) +
geom_line() +
scale_size(range = c(1, 3), guide="none")
scale_color_limesight(palette = "sailing") +
theme_limesight()
ggplot(data = combined, aes(x = day,
y = percentile,
group = competitorID,
color = color,
size = size)) +
geom_line() +
scale_size(range = c(0.5, 2), guide="none")
scale_color_limesight(palette = "sailing") +
theme_limesight()
ggplot(data = combined, aes(x = day,
y = percentile,
group = competitorID,
color = color,
size = size)) +
geom_line() +
scale_size(range = c(0.5, 1.5), guide="none")
scale_color_limesight(palette = "sailing") +
theme_limesight()
ggplot(data = combined, aes(x = day,
y = percentile,
group = competitorID,
color = color,
size = size)) +
geom_line() +
scale_size(range = c(0.5, 1.5), guide="none") +
scale_color_limesight(palette = "sailing") +
theme_limesight()
runApp()
id = "Froot Loops"
runApp()
runApp()
runApp()
runApp()
combined = pastRatings %>%
rbind(pastRatings) %>%
mutate(color = ifelse(competitorID == id, 1, 0),
size  = ifelse(competitorID == id, 2, 1)) %>%
mutate(color = as.factor(color))
timeline = ggplot(data = combined, aes(x = day,
y = percentile,
group = competitorID,
color = color,
size = size)) +
geom_line() +
scale_size(range = c(0.5, 1.5), guide="none") +
scale_color_limesight(palette = "sailing") +
theme_limesight()
plotly(timeline)
?plotly
ggplotly(timeline))
ggplotly(timeline)
runApp()
runApp()
runApp()
